{
   "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
    "parameters": {
        "clientAppName": {
           "type": "string",
           "defaultValue": "dr-client-app",
           "metadata": {
               "description": "Name of the Client Container App"
           }
        },
        "serverAppName": {
           "type": "string",
           "defaultValue": "dr-server-app",
           "metadata": {
               "description": "Name of the Server Container App"
           }
        },
        "redisName": {
           "type": "string",
           "defaultValue": "dr-redis",
           "metadata": {
               "description": "Name of the Redis cache"
           }
        },
        "mongoDBName": {
           "type": "string",
           "defaultValue": "dr-mongo",
           "metadata": {
               "description": "Name of the MongoDB"
           }
        },
        "environmentName": {
           "type": "string",
           "defaultValue": "dr-environment",
           "metadata": {
               "description": "Name of the environmetn"
           }
        },
        "workspaceName": {
           "type": "string",
           "defaultValue": "dr-workspace",
           "metadata": {
               "description": "Name of the workspace"
           }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "redisCacheSKU": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ],
            "metadata": {
                "description": "Specify the pricing tier of the new Azure Redis Cache."
            }
            },
        "redisCacheFamily": {
            "type": "string",
            "defaultValue": "C",
            "allowedValues": [
                "C",
                "P"
            ],
            "metadata": {
                "description": "Specify the family for the sku. C = Basic/Standard, P = Premium."
            }
            },
        "redisCacheCapacity": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "metadata": {
                "description": "Specify the size of the new Azure Redis Cache instance. Valid values: for C (Basic/Standard) family (0, 1, 2, 3, 4, 5, 6), for P (Premium) family (1, 2, 3, 4)"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[parameters('workspaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                "name": "PerGB2018"
                }
            }
        },
        {
            "type": "Microsoft.App/managedEnvironments",
            "apiVersion": "2022-01-01-preview",
            "name": "[parameters('environmentName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
            ],
            "properties": {
                "internalLoadBalancerEnabled": false,
                "appLogsConfiguration": {
                    "destination": "log-analytics",
                    "logAnalyticsConfiguration": {
                        "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2020-08-01').customerId]",
                        "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2020-08-01').primarySharedKey]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.App/containerapps",
            "apiVersion": "2022-01-01-preview",
            "name": "[parameters('ClientAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments/', parameters('environmentName'))]",
                "[resourceId('Microsoft.App/containerapps/', parameters('serverAppName'))]"
            ],
            "properties": {
                "configuration": {
                    "ingress": {
                        "external": true,
                        "targetPort": 80,
                        "transport": "auto"
                    }
                },
                "template": {
                    "containers": [
                        {
                            "name": "[parameters('clientAppName')]",
                            "image": "docker.io/decisionrules/client",
                            "command": [],
                            "resources": {
                                "cpu": ".25",
                                "memory": ".5Gi"
                            },
                            "env": [
                                {
                                    "name": "API_URL",
                                    "value": "[format('https://{0}',reference(resourceId('Microsoft.App/containerapps', parameters('serverAppName'))).configuration.ingress.fqdn)]"
                                },
                                {
                                    "name": "SHOWCASE",
                                    "value": "false"
                                }
                            ]
                        }
                    ]
                },
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
            }
        },
        {
            "type": "Microsoft.App/containerapps",
            "apiVersion": "2022-01-01-preview",
            "name": "[parameters('serverAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.App/managedEnvironments/', parameters('environmentName'))]",
                "[resourceId('Microsoft.Cache/redis/', parameters('redisName'))]",
                "[resourceId('Microsoft.DocumentDb/databaseAccounts/', parameters('mongoDBName'))]"
            ],
            "properties": {
                "configuration": {
                    "ingress": {
                        "external": true,
                        "targetPort": 8080,
                        "transport": "auto"
                    }
                },
                "template": {
                    "containers": [
                        {
                            "name": "[parameters('serverAppName')]",
                            "image": "docker.io/decisionrules/server",
                            "command": [],
                            "resources": {
                                "cpu": ".25",
                                "memory": ".5Gi"
                            },
                            "env": [
                                {
                                    "name": "NODE_ENV",
                                    "value": "docker"
                                },
                                {
                                    "name": "REDIS_URL",
                                    "value": "[format('redis://:{0}@{1}.redis.cache.windows.net:6379', listKeys(resourceId('Microsoft.Cache/redis', parameters('redisName')), '2021-06-01').primaryKey, parameters('redisName'))]"
                                },
                                {
                                    "name": "SHOWCASE",
                                    "value": "false"
                                },
                                {
                                    "name": "MONGO_DB_URI",
                                    "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('mongoDBName')), '2021-10-15-preview').connectionStrings[0].connectionString]"
                                },
                                {
                                    "name": "LICENSE_KEY",
                                    "value": "OgIv0D8QpmwigueTCe3yTi5vK5w53EAMvEOHXrSTjP1VMzsb"
                                }
                            ],
                            "probes": [
                               {
                                "type": "liveness",
                                "failureThreshold": 3,
                                "periodSeconds": 30,
                                "successThreshold": 1,
                                "tcpSocket": {
                                  "port": 8080
                                },
                                "timeoutSeconds": 30
                               }
                           ]
                        }
                    ],
                    "scale": {
                      "minReplicas": 1,
                      "maxReplicas": 10,
                      "rules": [{
                        "name": "cpu-scaling-rule",
                        "custom": {
                          "type": "cpu",
                          "metadata": {
                            "type": "Utilization",
                            "value": "60"
                          }
                        }
                      }]
                    }
                },
                "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]"
            }
        },
        {
            "type": "Microsoft.Cache/redis",
            "apiVersion": "2021-06-01",
            "name": "[parameters('redisName')]",
            "location": "[parameters('location')]",
            "dependsOn": [],
            "properties": {
                "sku": {
                    "name": "[parameters('redisCacheSKU')]",
                    "family": "[parameters('redisCacheFamily')]",
                    "capacity": "[parameters('redisCacheCapacity')]"
                },
                "redisConfiguration": {
                    "maxmemory-policy": "allkeys-lru"
                },
                "enableNonSslPort": true,
                "redisVersion": "4"
            }
        },
        {
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "apiVersion": "2021-10-15-preview",
            "kind": "MongoDB",
            "name": "[parameters('mongoDBName')]",
            "location": "[parameters('location')]",
            "properties": {
                "databaseAccountOfferType": "Standard",
                "locations": [
                    {
                        "failoverPriority": 0,
                        "locationName": "[parameters('location')]",
                        "isZoneRedundant": true
                    }
                ],
                "backupPolicy": {
                    "type": "Periodic",
                    "periodicModeProperties": {
                        "backupIntervalInMinutes": 240,
                        "backupRetentionIntervalInHours": 8,
                        "backupStorageRedundancy": "Local"
                    }
                },
                "isVirtualNetworkFilterEnabled": false,
                "virtualNetworkRules": [],
                "ipRules": [],
                "dependsOn": [],
                "enableMultipleWriteLocations": true,
                "capabilities": [
                    {
                        "name": "EnableMongo"
                    },
                    {
                        "name": "DisableRateLimitingResponses"
                    }
                ],
                "apiProperties": {
                    "serverVersion": "4.0"
                },
                "enableFreeTier": true,
                "capacity": {
                    "totalThroughputLimit": 8000
                }
            }
        }
    ],
    "outputs": {
        "clientUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.App/containerapps', parameters('clientAppName'))).configuration.ingress.fqdn]"
        },
        "serverUrl": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.App/containerapps', parameters('serverAppName'))).configuration.ingress.fqdn]"
        }
    }
}